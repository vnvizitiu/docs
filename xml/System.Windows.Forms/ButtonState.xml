<Type Name="ButtonState" FullName="System.Windows.Forms.ButtonState">
  <TypeSignature Language="C#" Value="public enum ButtonState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ButtonState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ButtonState" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the appearance of a button.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This enumeration represents the different states of a button. The default state is `Normal`.  
  
   
  
## Examples  
 In this example, you use the `ButtonState` enumeration as a parameter to the method <xref:System.Windows.Forms.ControlPaint.DrawButton%2A> to specify the state of `button1`. To run the example, create two buttons, `button1` and `button2`. Then replace the `button2_Click` method with the example code. Click `button2` to redraw `button1` and change its state to `Flat`.  
  
 [!code-cpp[ButtonState#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#1)]
 [!code-csharp[ButtonState#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#1)]
 [!code-vb[ButtonState#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ButtonState All = int32(18176)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ButtonState.All" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>All flags except <see langword="Normal" /> are set.</summary>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="Checked" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ButtonState Checked = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ButtonState.Checked" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The button has a checked or latched appearance. Use this appearance to show that a toggle button has been pressed.</summary>
      </Docs>
    </Member>
    <Member MemberName="Flat">
      <MemberSignature Language="C#" Value="Flat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ButtonState Flat = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ButtonState.Flat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The button has a flat, two-dimensional appearance.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inactive">
      <MemberSignature Language="C#" Value="Inactive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ButtonState Inactive = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ButtonState.Inactive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The button is inactive (grayed).</summary>
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="Normal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ButtonState Normal = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ButtonState.Normal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The button has its normal appearance (three-dimensional).</summary>
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="Pushed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ButtonState Pushed = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ButtonState.Pushed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The button appears pressed.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
