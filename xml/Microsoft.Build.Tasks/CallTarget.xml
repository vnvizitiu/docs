<Type Name="CallTarget" FullName="Microsoft.Build.Tasks.CallTarget">
  <TypeSignature Language="C#" Value="public class CallTarget : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallTarget extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.CallTarget" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Build.Framework.RunInMTA</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the <c>CallTarget</c> task. Use the <c>CallTarget</c> element in your project file to create and execute this task. For usage and parameter information, see [CallTarget Task](http://msdn.microsoft.com/library/bb1fe2c4-4383-436f-8326-c24cc4a46150).</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CallTarget.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CallTarget" /> class.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CallTarget.Execute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Instructs the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine to build one or more targets in the current project.</summary>
        <returns>
          <see langword="true" /> if all targets built successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RunEachTargetSeparately">
      <MemberSignature Language="C#" Value="public bool RunEachTargetSeparately { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RunEachTargetSeparately" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine is called once per target (<see langword="true" />) or the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine is called once to build all targets (<see langword="false" />).</summary>
        <value>
          <see langword="true" /> if the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine is called once per target; <see langword="false" /> if the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine is called once to build all targets.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TargetOutputs">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] TargetOutputs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] TargetOutputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CallTarget.TargetOutputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the outputs of all built targets.</summary>
        <value>The outputs of all built targets.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public string[] Targets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CallTarget.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the target or targets to build.</summary>
        <value>The target or targets to build.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseResultsCache">
      <MemberSignature Language="C#" Value="public bool UseResultsCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseResultsCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CallTarget.UseResultsCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine will return the built targets from the cache.</summary>
        <value>
          <see langword="true" /> if the MSBuild engine will return the built targets from the cache; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The scope of built targets in the cash is (ProjectFileName, GlobalProperties)[TargetNames] as a list of build items.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
