<Type Name="SettingsProviderAttribute" FullName="System.Configuration.SettingsProviderAttribute">
  <TypeSignature Language="C#" Value="public sealed class SettingsProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SettingsProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProviderAttribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.  
  
 The <xref:System.Configuration.SettingsProviderAttribute> specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A <xref:System.Configuration.SettingsProviderAttribute> set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.  
  
 Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.  
  
> [!CAUTION]
>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SettingsProviderAttribute (string providerTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerTypeName">A <see cref="T:System.String" /> containing the name of the settings provider.</param>
        <summary>Initializes an instance of the <see cref="T:System.Configuration.SettingsProviderAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider.  
  
> [!CAUTION]
>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SettingsProviderAttribute (Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="providerType">A <see cref="T:System.Type" /> containing the settings provider type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsProviderAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderTypeName">
      <MemberSignature Language="C#" Value="public string ProviderTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type name of the settings provider.</summary>
        <value>A <see cref="T:System.String" /> containing the name of the settings provider.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.SettingsProviderAttribute.ProviderTypeName%2A> property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
