<Type Name="InertiaTranslationBehavior2D" FullName="System.Windows.Input.Manipulations.InertiaTranslationBehavior2D">
  <TypeSignature Language="C#" Value="public sealed class InertiaTranslationBehavior2D : System.Windows.Input.Manipulations.InertiaParameters2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InertiaTranslationBehavior2D extends System.Windows.Input.Manipulations.InertiaParameters2D" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.Manipulations.InertiaParameters2D</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Describes desired translation behavior of an inertia processor.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaTranslationBehavior2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredDeceleration">
      <MemberSignature Language="C#" Value="public float DesiredDeceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DesiredDeceleration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the desired deceleration, in coordinate units per millisecond squared.</summary>
        <value>The desired deceleration, in coordinate units per millisecond squared.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement%2A> to `NaN`. The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement%2A> is `NaN`. You must set one or the other property before inertia processing starts.  
  
 <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration%2A> must be a finite, non-negative number.  
  
 This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredDisplacement">
      <MemberSignature Language="C#" Value="public float DesiredDisplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DesiredDisplacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the absolute distance that the object needs to travel along the velocity vector, in coordinate units.</summary>
        <value>The absolute distance that the object needs to travel along the velocity vector, in coordinate units.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration%2A> to `NaN`. The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration%2A> property is `NaN`. You must set one or the other property before inertia processing starts.  
  
 <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement%2A> must be a finite, non-negative number. The direction of displacement is along the <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityX%2A> and <xref:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityY%2A> vector.  
  
 This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocityX">
      <MemberSignature Language="C#" Value="public float InitialVelocityX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialVelocityX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the initial velocity along the x-axis, in coordinate units per millisecond.</summary>
        <value>The initial velocity along the x-axis, in coordinate units per millisecond.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value for this property is `NaN`. Leaving this property unchanged from the default or setting this property to zero (0) will disable translational inertia along the x-axis.  
  
 This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocityY">
      <MemberSignature Language="C#" Value="public float InitialVelocityY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialVelocityY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the initial velocity along the y-axis, in coordinate units per millisecond.</summary>
        <value>The initial velocity along the y-axis, in coordinate units per millisecond.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default value for this property is `NaN`. Leaving this property unchanged from the default or setting this property to zero (0) will disable translational inertia along the y-axis.  
  
 This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
