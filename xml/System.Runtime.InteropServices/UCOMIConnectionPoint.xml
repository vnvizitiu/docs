<Type Name="UCOMIConnectionPoint" FullName="System.Runtime.InteropServices.UCOMIConnectionPoint">
  <TypeSignature Language="C#" Value="public interface UCOMIConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIConnectionPoint" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("b196b286-bab4-101a-b69c-00aa00341d07")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Use <see cref="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint" /> instead.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, please see the existing documentation for `IConnectionPoint` in the com subfolder of the MSDN library.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Advise">
      <MemberSignature Language="C#" Value="public void Advise (object pUnkSink, out int pdwCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advise(object pUnkSink, int32 pdwCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnkSink" Type="System.Object" />
        <Parameter Name="pdwCookie" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnkSink">Reference to the sink to receive calls for the outgoing interface managed by this connection point.</param>
        <param name="pdwCookie">On successful return, contains the connection cookie.</param>
        <summary>Establishes an advisory connection between the connection point and the caller's sink object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, please see the existing documentation for `IConnectionPoint::Advise` in the MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumConnections">
      <MemberSignature Language="C#" Value="public void EnumConnections (out System.Runtime.InteropServices.UCOMIEnumConnections ppEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumConnections(class System.Runtime.InteropServices.UCOMIEnumConnections ppEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.EnumConnections(System.Runtime.InteropServices.UCOMIEnumConnections@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppEnum" Type="System.Runtime.InteropServices.UCOMIEnumConnections&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppEnum">On successful return, contains the newly created enumerator.</param>
        <summary>Creates an enumerator object for iteration through the connections that exist to this connection point.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, please see the existing documentation for `IConnectionPoint::EnumConnections` in the MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionInterface">
      <MemberSignature Language="C#" Value="public void GetConnectionInterface (out Guid pIID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetConnectionInterface(valuetype System.Guid pIID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.GetConnectionInterface(System.Guid@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pIID" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pIID">On successful return, contains the IID of the outgoing interface managed by this connection point.</param>
        <summary>Returns the IID of the outgoing interface managed by this connection point.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, please see the existing documentation for `IConnectionPoint::GetConnectionInterface` in the MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPointContainer">
      <MemberSignature Language="C#" Value="public void GetConnectionPointContainer (out System.Runtime.InteropServices.UCOMIConnectionPointContainer ppCPC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetConnectionPointContainer(class System.Runtime.InteropServices.UCOMIConnectionPointContainer ppCPC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.UCOMIConnectionPointContainer@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppCPC" Type="System.Runtime.InteropServices.UCOMIConnectionPointContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppCPC">On successful return, contains the connectable object's <see langword="IConnectionPointContainer" /> interface.</param>
        <summary>Retrieves the <see langword="IConnectionPointContainer" /> interface pointer to the connectable object that conceptually owns this connection point.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, please see the existing documentation for `IConnectionPoint::GetConnectionPointContainer` in the MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unadvise">
      <MemberSignature Language="C#" Value="public void Unadvise (int dwCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unadvise(int32 dwCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Unadvise(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwCookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwCookie">The connection cookie previously returned from <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />.</param>
        <summary>Terminates an advisory connection previously established through <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, please see the existing documentation for `IConnectionPoint::Unadvise` in the MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
