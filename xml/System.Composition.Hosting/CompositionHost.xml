<Type Name="CompositionHost" FullName="System.Composition.Hosting.CompositionHost">
  <TypeSignature Language="C#" Value="public sealed class CompositionHost : System.Composition.CompositionContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositionHost extends System.Composition.CompositionContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.CompositionHost" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.CompositionContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A lightweight composition container that is assembled from specified providers.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCompositionHost">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.CompositionHost CreateCompositionHost (System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorProvider&gt; providers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.CompositionHost CreateCompositionHost(class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.ExportDescriptorProvider&gt; providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.CreateCompositionHost(System.Collections.Generic.IEnumerable{System.Composition.Hosting.Core.ExportDescriptorProvider})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.CompositionHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providers" Type="System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="providers">The providers, which contain export descriptions for the parts being composed.</param>
        <summary>Creates the composition host with the specified collection of providers.</summary>
        <returns>The created composition host.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCompositionHost">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.CompositionHost CreateCompositionHost (System.Composition.Hosting.Core.ExportDescriptorProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.CompositionHost CreateCompositionHost(class System.Composition.Hosting.Core.ExportDescriptorProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.CreateCompositionHost(System.Composition.Hosting.Core.ExportDescriptorProvider[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.CompositionHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providers" Type="System.Composition.Hosting.Core.ExportDescriptorProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providers">The providers, which contain export descriptions for the parts being composed.</param>
        <summary>Creates the composition host with the specified array of providers.</summary>
        <returns>The created composition host.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the composition host and any globally shared parts.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public override bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, object export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.CompositionHost.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract">The export to retrieve.</param>
        <param name="export">When this method returns, contains an instance of the export if available; otherwise, <see langword="null" />.</param>
        <summary>Retrieves the specified export from the composition context.</summary>
        <returns><see langword="true" /> if the export was retrieved; otherwise, <see langword="false" />.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type> 