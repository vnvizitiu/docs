<Type Name="DispatcherHookEventHandler" FullName="System.Windows.Threading.DispatcherHookEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DispatcherHookEventHandler(object sender, DispatcherHookEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherHookEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherHookEventHandler" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Threading.DispatcherHookEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">The event data.</param>
    <summary>Represents the method that will handle <see cref="T:System.Windows.Threading.DispatcherHooks" /> related events.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This delegate handles the following events:  
  
 <xref:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged?displayProperty=fullName>  
  
 <xref:System.Windows.Threading.DispatcherHooks.OperationPosted?displayProperty=fullName>  
  
 <xref:System.Windows.Threading.DispatcherHooks.OperationCompleted?displayProperty=fullName>  
  
 <xref:System.Windows.Threading.DispatcherHooks.OperationAborted?displayProperty=fullName>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
