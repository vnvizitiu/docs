<Type Name="OdbcInfoMessageEventHandler" FullName="System.Data.Odbc.OdbcInfoMessageEventHandler">
  <TypeSignature Language="C#" Value="public delegate void OdbcInfoMessageEventHandler(object sender, OdbcInfoMessageEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OdbcInfoMessageEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcInfoMessageEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Data.Odbc.OdbcInfoMessageEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">An <see cref="T:System.Data.Odbc.OdbcInfoMessageEventArgs" /> object that contains the event data.</param>
    <summary>Represents the method that will handle the <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" /> event of an <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create an <xref:System.Data.Odbc.OdbcInfoMessageEventArgs> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
