<Type Name="WizardNavigationEventHandler" FullName="System.Web.UI.WebControls.WizardNavigationEventHandler">
  <TypeSignature Language="C#" Value="public delegate void WizardNavigationEventHandler(object sender, WizardNavigationEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WizardNavigationEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardNavigationEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">An argument of type <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> that contains the event data.</param>
    <summary>Represents the method that will handle navigation events in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.WebControls.WizardNavigationEventHandler> class represents the method that handles the navigation events <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>, <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>, <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>, and <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> for a <xref:System.Web.UI.WebControls.Wizard> control and for controls that inherit from the <xref:System.Web.UI.WebControls.Wizard> control (such as the <xref:System.Web.UI.WebControls.CreateUserWizard> control).  
  
 When you create a <xref:System.Web.UI.WebControls.WizardNavigationEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
