<Type Name="CSharpBinderFlags" FullName="Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags">
  <TypeSignature Language="C#" Value="public enum CSharpBinderFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CSharpBinderFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CSharp</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="BinaryOperationLogical">
      <MemberSignature Language="C#" Value="BinaryOperationLogical" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags BinaryOperationLogical = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.BinaryOperationLogical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CheckedContext">
      <MemberSignature Language="C#" Value="CheckedContext" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags CheckedContext = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.CheckedContext" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The evaluation of this binder happens in a checked context.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertArrayIndex">
      <MemberSignature Language="C#" Value="ConvertArrayIndex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags ConvertArrayIndex = int32(32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertArrayIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binder represents an implicit conversion for use in an array creation expression.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertExplicit">
      <MemberSignature Language="C#" Value="ConvertExplicit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags ConvertExplicit = int32(16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertExplicit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binder represents an explicit conversion.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvokeSimpleName">
      <MemberSignature Language="C#" Value="InvokeSimpleName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags InvokeSimpleName = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSimpleName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binder represents an invoke on a simple name.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvokeSpecialName">
      <MemberSignature Language="C#" Value="InvokeSpecialName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags InvokeSpecialName = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSpecialName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binder represents an invoke on a specialname.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>There is no additional information required for this binder.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ResultDiscarded">
      <MemberSignature Language="C#" Value="ResultDiscarded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags ResultDiscarded = int32(256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultDiscarded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The binder is used in a position that does not require a result, and can therefore bind to a void returning method.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ResultIndexed">
      <MemberSignature Language="C#" Value="ResultIndexed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags ResultIndexed = int32(64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultIndexed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The result of any bind is going to be indexed get a set index or get index binder.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValueFromCompoundAssignment">
      <MemberSignature Language="C#" Value="ValueFromCompoundAssignment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags ValueFromCompoundAssignment = int32(128)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ValueFromCompoundAssignment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CSharp</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value in this set index or set member comes a compound assignment operator.</summary>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
