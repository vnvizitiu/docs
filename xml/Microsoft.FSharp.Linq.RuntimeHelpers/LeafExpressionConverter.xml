<Type Name="LeafExpressionConverter" FullName="Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter">
  <TypeSignature Language="C#" Value="public static class LeafExpressionConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed LeafExpressionConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>2.3.98.1</AssemblyVersion>
    <AssemblyVersion>3.98.4.0</AssemblyVersion>
    <AssemblyVersion>3.100.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluateQuotation">
      <MemberSignature Language="C#" Value="public static object EvaluateQuotation (Microsoft.FSharp.Quotations.FSharpExpr e);" />
      <MemberSignature Language="ILAsm" Value=".method public static object EvaluateQuotation(class Microsoft.FSharp.Quotations.FSharpExpr e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.EvaluateQuotation(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.FSharp.Quotations.FSharpExpr" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplicitExpressionConversionHelper&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;T&gt; ImplicitExpressionConversionHelper&lt;T&gt; (T _x);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Linq.Expressions.Expression`1&lt;!!T&gt; ImplicitExpressionConversionHelper&lt;T&gt;(!!T _x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.ImplicitExpressionConversionHelper``1(``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="_x" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="_x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInitializationHelper&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T MemberInitializationHelper&lt;T&gt; (T _x);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!T MemberInitializationHelper&lt;T&gt;(!!T _x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.MemberInitializationHelper``1(``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="_x" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="_x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewAnonymousObjectHelper&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T NewAnonymousObjectHelper&lt;T&gt; (T _x);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!T NewAnonymousObjectHelper&lt;T&gt;(!!T _x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.NewAnonymousObjectHelper``1(``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="_x" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="_x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotationToExpression">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression QuotationToExpression (Microsoft.FSharp.Quotations.FSharpExpr e);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Linq.Expressions.Expression QuotationToExpression(class Microsoft.FSharp.Quotations.FSharpExpr e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.QuotationToExpression(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.FSharp.Quotations.FSharpExpr" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotationToLambdaExpression&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;T&gt; QuotationToLambdaExpression&lt;T&gt; (Microsoft.FSharp.Quotations.FSharpExpr&lt;T&gt; e);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Linq.Expressions.Expression`1&lt;!!T&gt; QuotationToLambdaExpression&lt;T&gt;(class Microsoft.FSharp.Quotations.FSharpExpr`1&lt;!!T&gt; e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.QuotationToLambdaExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.FSharp.Quotations.FSharpExpr&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubstHelper&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Quotations.FSharpExpr&lt;T&gt; SubstHelper&lt;T&gt; (Microsoft.FSharp.Quotations.FSharpExpr q, Microsoft.FSharp.Quotations.FSharpVar[] x, object[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Quotations.FSharpExpr`1&lt;!!T&gt; SubstHelper&lt;T&gt;(class Microsoft.FSharp.Quotations.FSharpExpr q, class Microsoft.FSharp.Quotations.FSharpVar[] x, object[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.SubstHelper``1(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar[],System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Quotations.FSharpExpr&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="q" Type="Microsoft.FSharp.Quotations.FSharpExpr" />
        <Parameter Name="x" Type="Microsoft.FSharp.Quotations.FSharpVar[]" />
        <Parameter Name="y" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="q">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubstHelperRaw">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Quotations.FSharpExpr SubstHelperRaw (Microsoft.FSharp.Quotations.FSharpExpr q, Microsoft.FSharp.Quotations.FSharpVar[] x, object[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Quotations.FSharpExpr SubstHelperRaw(class Microsoft.FSharp.Quotations.FSharpExpr q, class Microsoft.FSharp.Quotations.FSharpVar[] x, object[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.SubstHelperRaw(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar[],System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
        <AssemblyVersion>3.100.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Quotations.FSharpExpr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="q" Type="Microsoft.FSharp.Quotations.FSharpExpr" />
        <Parameter Name="x" Type="Microsoft.FSharp.Quotations.FSharpVar[]" />
        <Parameter Name="y" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="q">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
