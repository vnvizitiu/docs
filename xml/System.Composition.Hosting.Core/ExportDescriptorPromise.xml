<Type Name="ExportDescriptorPromise" FullName="System.Composition.Hosting.Core.ExportDescriptorPromise">
  <TypeSignature Language="C#" Value="public class ExportDescriptorPromise" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportDescriptorPromise extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.ExportDescriptorPromise" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an export descriptor that an available part can provide.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This type is central to the cycle-checking, adaptation, and compilation features of the container.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportDescriptorPromise (System.Composition.Hosting.Core.CompositionContract contract, string origin, bool isShared, Func&lt;System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;&gt; dependencies, Func&lt;System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;,System.Composition.Hosting.Core.ExportDescriptor&gt; getDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Composition.Hosting.Core.CompositionContract contract, string origin, bool isShared, class System.Func`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.CompositionDependency&gt;&gt; dependencies, class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.CompositionDependency&gt;, class System.Composition.Hosting.Core.ExportDescriptor&gt; getDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.ExportDescriptorPromise.#ctor(System.Composition.Hosting.Core.CompositionContract,System.String,System.Boolean,System.Func{System.Collections.Generic.IEnumerable{System.Composition.Hosting.Core.CompositionDependency}},System.Func{System.Collections.Generic.IEnumerable{System.Composition.Hosting.Core.CompositionDependency},System.Composition.Hosting.Core.ExportDescriptor})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="origin" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
        <Parameter Name="dependencies" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;&gt;" />
        <Parameter Name="getDescriptor" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;,System.Composition.Hosting.Core.ExportDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="contract">The promised contract.</param>
        <param name="origin">A description of the promise's origin. For example, a part type.</param>
        <param name="isShared"><see langword="true" /> if the promise is shared, otherwise <see langword="false" />.</param>
        <param name="dependencies">A function that provides the dependencies required to fulfill the promise.</param>
        <param name="getDescriptor">A function that provides the promised descriptor.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.ExportDescriptorPromise"/> class.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.CompositionContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Composition.Hosting.Core.CompositionContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.ExportDescriptorPromise.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the contract fulfilled by this promise.</summary>
        <value>The contract</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Composition.Hosting.Core.CompositionDependency&gt; Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Composition.Hosting.Core.CompositionDependency&gt; Dependencies" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.ExportDescriptorPromise.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Composition.Hosting.Core.CompositionDependency&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the dependencies that are required to fulfill this promise.</summary>
        <value>A collection of dependencies.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDescriptor">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.ExportDescriptor GetDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.ExportDescriptor GetDescriptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.ExportDescriptorPromise.GetDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.ExportDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the promised descriptor.</summary>
        <returns>The descriptor.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.ExportDescriptorPromise.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the promise is shared.</summary>
        <value><see langword="true"/> if the promise is shared within some context; otherwise, <see langword="false"/>.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Origin">
      <MemberSignature Language="C#" Value="public string Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Origin" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.ExportDescriptorPromise.Origin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a description of where the promise originates (for example, a part type), used to provide readable errors.</summary>
        <value>A description of the promise's origin.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.ExportDescriptorPromise.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the string representation of this <see cref="T:System.Composition.Hosting.Core.ExportDescriptorPromise"/> object.</summary>
        <returns>The string representation of this <see cref="T:System.Composition.Hosting.Core.ExportDescriptorPromise"/> object.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
