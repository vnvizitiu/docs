<Type Name="InstrumentationType" FullName="System.Management.Instrumentation.InstrumentationType">
  <TypeSignature Language="C#" Value="public enum InstrumentationType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstrumentationType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.InstrumentationType" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the type of instrumentation provided by a class.  
  
 Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to create a management event class by using the <xref:System.Management.Instrumentation.InstrumentationType> enumeration.  
  
 [!code-csharp[wminet_InstrumentationType#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InstrumentationType/cs/InstrumentationType.cs#1)]
 [!code-vb[wminet_InstrumentationType#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InstrumentationType/vb/InstrumentationType.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abstract">
      <MemberSignature Language="C#" Value="Abstract" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Instrumentation.InstrumentationType Abstract = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Instrumentation.InstrumentationType.Abstract" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.InstrumentationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The class defines an abstract class for management instrumentation.</summary>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="Event" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Instrumentation.InstrumentationType Event = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Instrumentation.InstrumentationType.Event" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.InstrumentationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The class provides events for management instrumentation.</summary>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="Instance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Management.Instrumentation.InstrumentationType Instance = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Management.Instrumentation.InstrumentationType.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.InstrumentationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The class provides instances for management instrumentation.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
