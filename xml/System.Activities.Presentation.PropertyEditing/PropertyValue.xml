<Type Name="PropertyValue" FullName="System.Activities.Presentation.PropertyEditing.PropertyValue">
  <TypeSignature Language="C#" Value="public abstract class PropertyValue : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyValue extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Maintains a data model for the value of a property in the property grid.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyValue (System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.#ctor(System.Activities.Presentation.PropertyEditing.PropertyEntry)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProperty" Type="System.Activities.Presentation.PropertyEditing.PropertyEntry" />
      </Parameters>
      <Docs>
        <param name="parentProperty">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> that corresponds to this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> class with the parent property set to a specified <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public abstract bool CanConvertFromString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConvertFromString" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.CanConvertFromString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> can be converted from a string.</summary>
        <value>
          <see langword="true" /> if the property value can be converted from a string; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchExceptions">
      <MemberSignature Language="C#" Value="protected virtual bool CatchExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CatchExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.CatchExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether exceptions thrown during property value getting and setting should be caught or should be propagated directly to the caller.</summary>
        <value>
          <see langword="true" /> if exceptions are caught; <see langword="false" /> if exceptions are propagated to the caller.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is based upon whether there are any subscribers to the <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException> event.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public abstract void ClearValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ClearValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When implemented in a derived class, clears the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> so that it is unset.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Collection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a collection of <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> instances that correspond to items in a collection when <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" /> verifies that the property is a collection.</summary>
        <value>A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" /> object that is a collection of property value instances.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="protected abstract object ConvertStringToValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object ConvertStringToValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ConvertStringToValue(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String" /> value to convert to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</param>
        <summary>When implemented in a derived class, converts the specified <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</summary>
        <returns>An <see cref="T:System.Object" /> value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="protected abstract string ConvertValueToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ConvertValueToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ConvertValueToString(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> to convert to a string.</param>
        <summary>When implemented in a derived class, converts the specified <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />.</summary>
        <returns>A <see cref="T:System.String" /> version of the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueCore">
      <MemberSignature Language="C#" Value="protected abstract object GetValueCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValueCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.GetValueCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When implemented in a derived class, returns a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</summary>
        <returns>A property value <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSubProperties">
      <MemberSignature Language="C#" Value="public abstract bool HasSubProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSubProperties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.HasSubProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether the type of this property supports sub-properties.</summary>
        <value>A <see cref="T:System.Boolean" /> that, when <see cref="T:System.Boolean.True" />, verifies that the type supports sub-properties, otherwise <see cref="T:System.Boolean.False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typical implementations will use a <xref:System.ComponentModel.TypeConverter> to verify whether sub-properties exist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public abstract bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> is a collection.</summary>
        <value>A <see cref="T:System.Boolean" /> that, when <see cref="T:System.Boolean.True" />, verifies that the property value is a collection, otherwise <see cref="T:System.Boolean.False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultValue">
      <MemberSignature Language="C#" Value="public abstract bool IsDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> is the default value for the property.</summary>
        <value>A <see cref="T:System.Boolean" /> that, when <see cref="T:System.Boolean.True" />, verifies that the value is the default, otherwise <see cref="T:System.Boolean.False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMixedValue">
      <MemberSignature Language="C#" Value="public abstract bool IsMixedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixedValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsMixedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether multiple objects contain this property and have different values.</summary>
        <value>
          <see langword="true" /> if multiple objects contain this property; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If `true`, <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.Value%2A> will return null and <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue%2A> will return <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyRootValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void NotifyRootValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyRootValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.NotifyRootValueChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" /> event when the underlying value type is changed externally, as on the design surface.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifySubPropertyChanged">
      <MemberSignature Language="C#" Value="protected void NotifySubPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifySubPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.NotifySubPropertyChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" /> event when one of the sub-properties of this property has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> object that provides the name of the property that changed.</param>
        <summary>Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> event with the specified <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> objects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyChanged(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property that changed.</param>
        <summary>Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> event that uses the name of the property that changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyValueException">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyValueException (System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyValueException(class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyValueException(System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" /> that provides information about the get or set failure that occurred.</param>
        <summary>Default implementation that raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" /> event when <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> properties experience failure getting or setting values in the underlying collection of data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentProperty">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.ParentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> when the property implementation occurs in a host environment.</summary>
        <value>A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> object that represents the parent property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when properties or sub-properties of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> object has changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyValueException">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; PropertyValueException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; PropertyValueException" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event used by host implementations for error handling.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RootValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RootValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> or <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> property is updated as a result of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> value being changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueCore">
      <MemberSignature Language="C#" Value="protected abstract void SetValueCore (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetValueCore(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.SetValueCore(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be set in the underlying collection of data.</param>
        <summary>When implemented in a derived class, sets the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" /> object that contains information about where this property value is coming from.</summary>
        <value>A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" /> object that contains property value source information.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public string StringValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> as a <see cref="T:System.String" />.</summary>
        <value>A <see cref="T:System.String" /> version of the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProperties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.SubProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a collection of sub-properties as <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> instances.</summary>
        <value>A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntryCollection" /> of instances.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubPropertyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SubPropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SubPropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when sub-properties are updated as a result of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> being changed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="protected abstract void ValidateValue (object valueToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateValue(object valueToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ValidateValue(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToValidate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="valueToValidate">The object whose value is verified.</param>
        <summary>When implemented in a derived class, throws an exception if verification of the specified value object shows it to be invalid.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a property value in the underlying collection of property data.</summary>
        <value>A property value <see cref="T:System.Object" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
